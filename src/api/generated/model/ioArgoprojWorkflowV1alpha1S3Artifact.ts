// @ts-nocheck
/**
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { IoArgoprojWorkflowV1alpha1CreateS3BucketOptions } from './ioArgoprojWorkflowV1alpha1CreateS3BucketOptions';
import { IoArgoprojWorkflowV1alpha1S3EncryptionOptions } from './ioArgoprojWorkflowV1alpha1S3EncryptionOptions';
import { IoK8sApiCoreV1SecretKeySelector } from './ioK8sApiCoreV1SecretKeySelector';

/**
* S3Artifact is the location of an S3 artifact
*/
export class IoArgoprojWorkflowV1alpha1S3Artifact {
    'accessKeySecret'?: IoK8sApiCoreV1SecretKeySelector;
    /**
    * Bucket is the name of the bucket
    */
    'bucket'?: string;
    'createBucketIfNotPresent'?: IoArgoprojWorkflowV1alpha1CreateS3BucketOptions;
    'encryptionOptions'?: IoArgoprojWorkflowV1alpha1S3EncryptionOptions;
    /**
    * Endpoint is the hostname of the bucket endpoint
    */
    'endpoint'?: string;
    /**
    * Insecure will connect to the service with TLS
    */
    'insecure'?: boolean;
    /**
    * Key is the key in the bucket where the artifact resides
    */
    'key'?: string;
    /**
    * Region contains the optional bucket region
    */
    'region'?: string;
    /**
    * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
    */
    'roleARN'?: string;
    'secretKeySecret'?: IoK8sApiCoreV1SecretKeySelector;
    /**
    * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
    */
    'useSDKCreds'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "accessKeySecret",
            "baseName": "accessKeySecret",
            "type": "IoK8sApiCoreV1SecretKeySelector"
        },
        {
            "name": "bucket",
            "baseName": "bucket",
            "type": "string"
        },
        {
            "name": "createBucketIfNotPresent",
            "baseName": "createBucketIfNotPresent",
            "type": "IoArgoprojWorkflowV1alpha1CreateS3BucketOptions"
        },
        {
            "name": "encryptionOptions",
            "baseName": "encryptionOptions",
            "type": "IoArgoprojWorkflowV1alpha1S3EncryptionOptions"
        },
        {
            "name": "endpoint",
            "baseName": "endpoint",
            "type": "string"
        },
        {
            "name": "insecure",
            "baseName": "insecure",
            "type": "boolean"
        },
        {
            "name": "key",
            "baseName": "key",
            "type": "string"
        },
        {
            "name": "region",
            "baseName": "region",
            "type": "string"
        },
        {
            "name": "roleARN",
            "baseName": "roleARN",
            "type": "string"
        },
        {
            "name": "secretKeySecret",
            "baseName": "secretKeySecret",
            "type": "IoK8sApiCoreV1SecretKeySelector"
        },
        {
            "name": "useSDKCreds",
            "baseName": "useSDKCreds",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return IoArgoprojWorkflowV1alpha1S3Artifact.attributeTypeMap;
    }
}

