// @ts-nocheck
/**
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { IoArgoprojWorkflowV1alpha1ArtifactoryArtifact } from './ioArgoprojWorkflowV1alpha1ArtifactoryArtifact';
import { IoArgoprojWorkflowV1alpha1AzureArtifact } from './ioArgoprojWorkflowV1alpha1AzureArtifact';
import { IoArgoprojWorkflowV1alpha1GCSArtifact } from './ioArgoprojWorkflowV1alpha1GCSArtifact';
import { IoArgoprojWorkflowV1alpha1GitArtifact } from './ioArgoprojWorkflowV1alpha1GitArtifact';
import { IoArgoprojWorkflowV1alpha1HDFSArtifact } from './ioArgoprojWorkflowV1alpha1HDFSArtifact';
import { IoArgoprojWorkflowV1alpha1HTTPArtifact } from './ioArgoprojWorkflowV1alpha1HTTPArtifact';
import { IoArgoprojWorkflowV1alpha1OSSArtifact } from './ioArgoprojWorkflowV1alpha1OSSArtifact';
import { IoArgoprojWorkflowV1alpha1RawArtifact } from './ioArgoprojWorkflowV1alpha1RawArtifact';
import { IoArgoprojWorkflowV1alpha1S3Artifact } from './ioArgoprojWorkflowV1alpha1S3Artifact';

/**
* ArtifactLocation describes a location for a single or multiple artifacts. It is used as single artifact in the context of inputs/outputs (e.g. outputs.artifacts.artname). It is also used to describe the location of multiple artifacts such as the archive location of a single workflow step, which the executor will use as a default location to store its files.
*/
export class IoArgoprojWorkflowV1alpha1ArtifactLocation {
    /**
    * ArchiveLogs indicates if the container logs should be archived
    */
    'archiveLogs'?: boolean;
    'artifactory'?: IoArgoprojWorkflowV1alpha1ArtifactoryArtifact;
    'azure'?: IoArgoprojWorkflowV1alpha1AzureArtifact;
    'gcs'?: IoArgoprojWorkflowV1alpha1GCSArtifact;
    'git'?: IoArgoprojWorkflowV1alpha1GitArtifact;
    'hdfs'?: IoArgoprojWorkflowV1alpha1HDFSArtifact;
    'http'?: IoArgoprojWorkflowV1alpha1HTTPArtifact;
    'oss'?: IoArgoprojWorkflowV1alpha1OSSArtifact;
    'raw'?: IoArgoprojWorkflowV1alpha1RawArtifact;
    's3'?: IoArgoprojWorkflowV1alpha1S3Artifact;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "archiveLogs",
            "baseName": "archiveLogs",
            "type": "boolean"
        },
        {
            "name": "artifactory",
            "baseName": "artifactory",
            "type": "IoArgoprojWorkflowV1alpha1ArtifactoryArtifact"
        },
        {
            "name": "azure",
            "baseName": "azure",
            "type": "IoArgoprojWorkflowV1alpha1AzureArtifact"
        },
        {
            "name": "gcs",
            "baseName": "gcs",
            "type": "IoArgoprojWorkflowV1alpha1GCSArtifact"
        },
        {
            "name": "git",
            "baseName": "git",
            "type": "IoArgoprojWorkflowV1alpha1GitArtifact"
        },
        {
            "name": "hdfs",
            "baseName": "hdfs",
            "type": "IoArgoprojWorkflowV1alpha1HDFSArtifact"
        },
        {
            "name": "http",
            "baseName": "http",
            "type": "IoArgoprojWorkflowV1alpha1HTTPArtifact"
        },
        {
            "name": "oss",
            "baseName": "oss",
            "type": "IoArgoprojWorkflowV1alpha1OSSArtifact"
        },
        {
            "name": "raw",
            "baseName": "raw",
            "type": "IoArgoprojWorkflowV1alpha1RawArtifact"
        },
        {
            "name": "s3",
            "baseName": "s3",
            "type": "IoArgoprojWorkflowV1alpha1S3Artifact"
        }    ];

    static getAttributeTypeMap() {
        return IoArgoprojWorkflowV1alpha1ArtifactLocation.attributeTypeMap;
    }
}

