// @ts-nocheck
/**
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { IoArgoprojWorkflowV1alpha1TarStrategy } from './ioArgoprojWorkflowV1alpha1TarStrategy';

/**
* ArchiveStrategy describes how to archive files/directory when saving artifacts
*/
export class IoArgoprojWorkflowV1alpha1ArchiveStrategy {
    /**
    * NoneStrategy indicates to skip tar process and upload the files or directory tree as independent files. Note that if the artifact is a directory, the artifact driver must support the ability to save/load the directory appropriately.
    */
    'none'?: object;
    'tar'?: IoArgoprojWorkflowV1alpha1TarStrategy;
    /**
    * ZipStrategy will unzip zipped input artifacts
    */
    'zip'?: object;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "none",
            "baseName": "none",
            "type": "object"
        },
        {
            "name": "tar",
            "baseName": "tar",
            "type": "IoArgoprojWorkflowV1alpha1TarStrategy"
        },
        {
            "name": "zip",
            "baseName": "zip",
            "type": "object"
        }    ];

    static getAttributeTypeMap() {
        return IoArgoprojWorkflowV1alpha1ArchiveStrategy.attributeTypeMap;
    }
}

