/**
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * OpenAPI spec version: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { IoArgoprojWorkflowV1alpha1CreateS3BucketOptions } from '../models/IoArgoprojWorkflowV1alpha1CreateS3BucketOptions';
import { IoArgoprojWorkflowV1alpha1S3EncryptionOptions } from '../models/IoArgoprojWorkflowV1alpha1S3EncryptionOptions';
import { IoK8sApiCoreV1SecretKeySelector } from '../models/IoK8sApiCoreV1SecretKeySelector';
import { HttpFile } from '../http/http';

/**
* S3ArtifactRepository defines the controller configuration for an S3 artifact repository
*/
export class IoArgoprojWorkflowV1alpha1S3ArtifactRepository {
    'accessKeySecret'?: IoK8sApiCoreV1SecretKeySelector;
    /**
    * Bucket is the name of the bucket
    */
    'bucket'?: string;
    'createBucketIfNotPresent'?: IoArgoprojWorkflowV1alpha1CreateS3BucketOptions;
    'encryptionOptions'?: IoArgoprojWorkflowV1alpha1S3EncryptionOptions;
    /**
    * Endpoint is the hostname of the bucket endpoint
    */
    'endpoint'?: string;
    /**
    * Insecure will connect to the service with TLS
    */
    'insecure'?: boolean;
    /**
    * KeyFormat is defines the format of how to store keys. Can reference workflow variables
    */
    'keyFormat'?: string;
    /**
    * KeyPrefix is prefix used as part of the bucket key in which the controller will store artifacts. DEPRECATED. Use KeyFormat instead
    */
    'keyPrefix'?: string;
    /**
    * Region contains the optional bucket region
    */
    'region'?: string;
    /**
    * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
    */
    'roleARN'?: string;
    'secretKeySecret'?: IoK8sApiCoreV1SecretKeySelector;
    /**
    * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
    */
    'useSDKCreds'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "accessKeySecret",
            "baseName": "accessKeySecret",
            "type": "IoK8sApiCoreV1SecretKeySelector",
            "format": ""
        },
        {
            "name": "bucket",
            "baseName": "bucket",
            "type": "string",
            "format": ""
        },
        {
            "name": "createBucketIfNotPresent",
            "baseName": "createBucketIfNotPresent",
            "type": "IoArgoprojWorkflowV1alpha1CreateS3BucketOptions",
            "format": ""
        },
        {
            "name": "encryptionOptions",
            "baseName": "encryptionOptions",
            "type": "IoArgoprojWorkflowV1alpha1S3EncryptionOptions",
            "format": ""
        },
        {
            "name": "endpoint",
            "baseName": "endpoint",
            "type": "string",
            "format": ""
        },
        {
            "name": "insecure",
            "baseName": "insecure",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "keyFormat",
            "baseName": "keyFormat",
            "type": "string",
            "format": ""
        },
        {
            "name": "keyPrefix",
            "baseName": "keyPrefix",
            "type": "string",
            "format": ""
        },
        {
            "name": "region",
            "baseName": "region",
            "type": "string",
            "format": ""
        },
        {
            "name": "roleARN",
            "baseName": "roleARN",
            "type": "string",
            "format": ""
        },
        {
            "name": "secretKeySecret",
            "baseName": "secretKeySecret",
            "type": "IoK8sApiCoreV1SecretKeySelector",
            "format": ""
        },
        {
            "name": "useSDKCreds",
            "baseName": "useSDKCreds",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return IoArgoprojWorkflowV1alpha1S3ArtifactRepository.attributeTypeMap;
    }

    public constructor() {
    }
}

