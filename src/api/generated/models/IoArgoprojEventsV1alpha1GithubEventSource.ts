/**
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * OpenAPI spec version: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { IoArgoprojEventsV1alpha1EventSourceFilter } from '../models/IoArgoprojEventsV1alpha1EventSourceFilter';
import { IoArgoprojEventsV1alpha1GithubAppCreds } from '../models/IoArgoprojEventsV1alpha1GithubAppCreds';
import { IoArgoprojEventsV1alpha1OwnedRepositories } from '../models/IoArgoprojEventsV1alpha1OwnedRepositories';
import { IoArgoprojEventsV1alpha1WebhookContext } from '../models/IoArgoprojEventsV1alpha1WebhookContext';
import { IoK8sApiCoreV1SecretKeySelector } from '../models/IoK8sApiCoreV1SecretKeySelector';
import { HttpFile } from '../http/http';

export class IoArgoprojEventsV1alpha1GithubEventSource {
    'active'?: boolean;
    'apiToken'?: IoK8sApiCoreV1SecretKeySelector;
    'contentType'?: string;
    'deleteHookOnFinish'?: boolean;
    'events'?: Array<string>;
    'filter'?: IoArgoprojEventsV1alpha1EventSourceFilter;
    'githubApp'?: IoArgoprojEventsV1alpha1GithubAppCreds;
    'githubBaseURL'?: string;
    'githubUploadURL'?: string;
    'id'?: string;
    'insecure'?: boolean;
    'metadata'?: { [key: string]: string; };
    /**
    * Organizations holds the names of organizations (used for organization level webhooks). Not required if Repositories is set.
    */
    'organizations'?: Array<string>;
    'owner'?: string;
    /**
    * Repositories holds the information of repositories, which uses repo owner as the key, and list of repo names as the value. Not required if Organizations is set.
    */
    'repositories'?: Array<IoArgoprojEventsV1alpha1OwnedRepositories>;
    'repository'?: string;
    'webhook'?: IoArgoprojEventsV1alpha1WebhookContext;
    'webhookSecret'?: IoK8sApiCoreV1SecretKeySelector;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "active",
            "baseName": "active",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "apiToken",
            "baseName": "apiToken",
            "type": "IoK8sApiCoreV1SecretKeySelector",
            "format": ""
        },
        {
            "name": "contentType",
            "baseName": "contentType",
            "type": "string",
            "format": ""
        },
        {
            "name": "deleteHookOnFinish",
            "baseName": "deleteHookOnFinish",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "events",
            "baseName": "events",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "filter",
            "baseName": "filter",
            "type": "IoArgoprojEventsV1alpha1EventSourceFilter",
            "format": ""
        },
        {
            "name": "githubApp",
            "baseName": "githubApp",
            "type": "IoArgoprojEventsV1alpha1GithubAppCreds",
            "format": ""
        },
        {
            "name": "githubBaseURL",
            "baseName": "githubBaseURL",
            "type": "string",
            "format": ""
        },
        {
            "name": "githubUploadURL",
            "baseName": "githubUploadURL",
            "type": "string",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "insecure",
            "baseName": "insecure",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "organizations",
            "baseName": "organizations",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "owner",
            "baseName": "owner",
            "type": "string",
            "format": ""
        },
        {
            "name": "repositories",
            "baseName": "repositories",
            "type": "Array<IoArgoprojEventsV1alpha1OwnedRepositories>",
            "format": ""
        },
        {
            "name": "repository",
            "baseName": "repository",
            "type": "string",
            "format": ""
        },
        {
            "name": "webhook",
            "baseName": "webhook",
            "type": "IoArgoprojEventsV1alpha1WebhookContext",
            "format": ""
        },
        {
            "name": "webhookSecret",
            "baseName": "webhookSecret",
            "type": "IoK8sApiCoreV1SecretKeySelector",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return IoArgoprojEventsV1alpha1GithubEventSource.attributeTypeMap;
    }

    public constructor() {
    }
}

