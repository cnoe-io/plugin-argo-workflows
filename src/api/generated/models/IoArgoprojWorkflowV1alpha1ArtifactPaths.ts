/**
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * OpenAPI spec version: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { IoArgoprojWorkflowV1alpha1ArchiveStrategy } from '../models/IoArgoprojWorkflowV1alpha1ArchiveStrategy';
import { IoArgoprojWorkflowV1alpha1ArtifactGC } from '../models/IoArgoprojWorkflowV1alpha1ArtifactGC';
import { IoArgoprojWorkflowV1alpha1ArtifactoryArtifact } from '../models/IoArgoprojWorkflowV1alpha1ArtifactoryArtifact';
import { IoArgoprojWorkflowV1alpha1AzureArtifact } from '../models/IoArgoprojWorkflowV1alpha1AzureArtifact';
import { IoArgoprojWorkflowV1alpha1GCSArtifact } from '../models/IoArgoprojWorkflowV1alpha1GCSArtifact';
import { IoArgoprojWorkflowV1alpha1GitArtifact } from '../models/IoArgoprojWorkflowV1alpha1GitArtifact';
import { IoArgoprojWorkflowV1alpha1HDFSArtifact } from '../models/IoArgoprojWorkflowV1alpha1HDFSArtifact';
import { IoArgoprojWorkflowV1alpha1HTTPArtifact } from '../models/IoArgoprojWorkflowV1alpha1HTTPArtifact';
import { IoArgoprojWorkflowV1alpha1OSSArtifact } from '../models/IoArgoprojWorkflowV1alpha1OSSArtifact';
import { IoArgoprojWorkflowV1alpha1RawArtifact } from '../models/IoArgoprojWorkflowV1alpha1RawArtifact';
import { IoArgoprojWorkflowV1alpha1S3Artifact } from '../models/IoArgoprojWorkflowV1alpha1S3Artifact';
import { HttpFile } from '../http/http';

/**
* ArtifactPaths expands a step from a collection of artifacts
*/
export class IoArgoprojWorkflowV1alpha1ArtifactPaths {
    'archive'?: IoArgoprojWorkflowV1alpha1ArchiveStrategy;
    /**
    * ArchiveLogs indicates if the container logs should be archived
    */
    'archiveLogs'?: boolean;
    'artifactGC'?: IoArgoprojWorkflowV1alpha1ArtifactGC;
    'artifactory'?: IoArgoprojWorkflowV1alpha1ArtifactoryArtifact;
    'azure'?: IoArgoprojWorkflowV1alpha1AzureArtifact;
    /**
    * Has this been deleted?
    */
    'deleted'?: boolean;
    /**
    * From allows an artifact to reference an artifact from a previous step
    */
    '_from'?: string;
    /**
    * FromExpression, if defined, is evaluated to specify the value for the artifact
    */
    'fromExpression'?: string;
    'gcs'?: IoArgoprojWorkflowV1alpha1GCSArtifact;
    'git'?: IoArgoprojWorkflowV1alpha1GitArtifact;
    /**
    * GlobalName exports an output artifact to the global scope, making it available as \'{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts
    */
    'globalName'?: string;
    'hdfs'?: IoArgoprojWorkflowV1alpha1HDFSArtifact;
    'http'?: IoArgoprojWorkflowV1alpha1HTTPArtifact;
    /**
    * mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.
    */
    'mode'?: number;
    /**
    * name of the artifact. must be unique within a template\'s inputs/outputs.
    */
    'name': string;
    /**
    * Make Artifacts optional, if Artifacts doesn\'t generate or exist
    */
    'optional'?: boolean;
    'oss'?: IoArgoprojWorkflowV1alpha1OSSArtifact;
    /**
    * Path is the container path to the artifact
    */
    'path'?: string;
    'raw'?: IoArgoprojWorkflowV1alpha1RawArtifact;
    /**
    * If mode is set, apply the permission recursively into the artifact if it is a folder
    */
    'recurseMode'?: boolean;
    's3'?: IoArgoprojWorkflowV1alpha1S3Artifact;
    /**
    * SubPath allows an artifact to be sourced from a subpath within the specified source
    */
    'subPath'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "archive",
            "baseName": "archive",
            "type": "IoArgoprojWorkflowV1alpha1ArchiveStrategy",
            "format": ""
        },
        {
            "name": "archiveLogs",
            "baseName": "archiveLogs",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "artifactGC",
            "baseName": "artifactGC",
            "type": "IoArgoprojWorkflowV1alpha1ArtifactGC",
            "format": ""
        },
        {
            "name": "artifactory",
            "baseName": "artifactory",
            "type": "IoArgoprojWorkflowV1alpha1ArtifactoryArtifact",
            "format": ""
        },
        {
            "name": "azure",
            "baseName": "azure",
            "type": "IoArgoprojWorkflowV1alpha1AzureArtifact",
            "format": ""
        },
        {
            "name": "deleted",
            "baseName": "deleted",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "_from",
            "baseName": "from",
            "type": "string",
            "format": ""
        },
        {
            "name": "fromExpression",
            "baseName": "fromExpression",
            "type": "string",
            "format": ""
        },
        {
            "name": "gcs",
            "baseName": "gcs",
            "type": "IoArgoprojWorkflowV1alpha1GCSArtifact",
            "format": ""
        },
        {
            "name": "git",
            "baseName": "git",
            "type": "IoArgoprojWorkflowV1alpha1GitArtifact",
            "format": ""
        },
        {
            "name": "globalName",
            "baseName": "globalName",
            "type": "string",
            "format": ""
        },
        {
            "name": "hdfs",
            "baseName": "hdfs",
            "type": "IoArgoprojWorkflowV1alpha1HDFSArtifact",
            "format": ""
        },
        {
            "name": "http",
            "baseName": "http",
            "type": "IoArgoprojWorkflowV1alpha1HTTPArtifact",
            "format": ""
        },
        {
            "name": "mode",
            "baseName": "mode",
            "type": "number",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "optional",
            "baseName": "optional",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "oss",
            "baseName": "oss",
            "type": "IoArgoprojWorkflowV1alpha1OSSArtifact",
            "format": ""
        },
        {
            "name": "path",
            "baseName": "path",
            "type": "string",
            "format": ""
        },
        {
            "name": "raw",
            "baseName": "raw",
            "type": "IoArgoprojWorkflowV1alpha1RawArtifact",
            "format": ""
        },
        {
            "name": "recurseMode",
            "baseName": "recurseMode",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "s3",
            "baseName": "s3",
            "type": "IoArgoprojWorkflowV1alpha1S3Artifact",
            "format": ""
        },
        {
            "name": "subPath",
            "baseName": "subPath",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return IoArgoprojWorkflowV1alpha1ArtifactPaths.attributeTypeMap;
    }

    public constructor() {
    }
}

