/**
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * OpenAPI spec version: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { IoArgoprojEventsV1alpha1EventSourceFilter } from '../models/IoArgoprojEventsV1alpha1EventSourceFilter';
import { IoArgoprojEventsV1alpha1TLSConfig } from '../models/IoArgoprojEventsV1alpha1TLSConfig';
import { IoK8sApiCoreV1SecretKeySelector } from '../models/IoK8sApiCoreV1SecretKeySelector';
import { HttpFile } from '../http/http';

export class IoArgoprojEventsV1alpha1RedisStreamEventSource {
    'consumerGroup'?: string;
    'db'?: number;
    'filter'?: IoArgoprojEventsV1alpha1EventSourceFilter;
    'hostAddress'?: string;
    'maxMsgCountPerRead'?: number;
    'metadata'?: { [key: string]: string; };
    'password'?: IoK8sApiCoreV1SecretKeySelector;
    /**
    * Streams to look for entries. XREADGROUP is used on all streams using a single consumer group.
    */
    'streams'?: Array<string>;
    'tls'?: IoArgoprojEventsV1alpha1TLSConfig;
    'username'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "consumerGroup",
            "baseName": "consumerGroup",
            "type": "string",
            "format": ""
        },
        {
            "name": "db",
            "baseName": "db",
            "type": "number",
            "format": ""
        },
        {
            "name": "filter",
            "baseName": "filter",
            "type": "IoArgoprojEventsV1alpha1EventSourceFilter",
            "format": ""
        },
        {
            "name": "hostAddress",
            "baseName": "hostAddress",
            "type": "string",
            "format": ""
        },
        {
            "name": "maxMsgCountPerRead",
            "baseName": "maxMsgCountPerRead",
            "type": "number",
            "format": ""
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "password",
            "baseName": "password",
            "type": "IoK8sApiCoreV1SecretKeySelector",
            "format": ""
        },
        {
            "name": "streams",
            "baseName": "streams",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "tls",
            "baseName": "tls",
            "type": "IoArgoprojEventsV1alpha1TLSConfig",
            "format": ""
        },
        {
            "name": "username",
            "baseName": "username",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return IoArgoprojEventsV1alpha1RedisStreamEventSource.attributeTypeMap;
    }

    public constructor() {
    }
}

